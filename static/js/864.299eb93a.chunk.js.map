{"version":3,"file":"static/js/864.299eb93a.chunk.js","mappings":"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","sources":["components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.styled.js","components/ErrorContactList/ErrorContactList.jsx","components/ErrorContactList/ErrorContactList.styled.js","components/FormNewContacts/FormNewContacts.jsx","components/FormNewContacts/FormNewContacts.styled.js","components/ModalCorrection/ModalCorrection.jsx","components/ModalCorrection/ModalCorrection.styled.js","components/SearchContacts/SearchContacts.jsx","components/SearchContacts/SearchContacts.styled.js","page/Contacts/Contacts.jsx","page/Contacts/Contacts.styled.js","redux/contacts/contacts-selector.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MdDelete } from 'react-icons/md';\nimport { TailSpin } from 'react-loader-spinner';\nimport { BsPencilFill } from 'react-icons/bs';\nimport {\n  Elements,\n  NameContacts,\n  Button,\n  IconBox,\n  ButtonBox,\n} from './ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\nimport { ModalCorrection } from 'components/ModalCorrection/ModalCorrection';\n\nexport const Contact = ({ data: { id, name, number } }) => {\n  const [icon, setIcon] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isModal, setIsModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIcon(name[0].toUpperCase());\n  }, [name]);\n\n  const onDeleteContact = async contactId => {\n    try {\n      setLoading(true);\n      await dispatch(contactsOperations.deleteContact(contactId));\n      setLoading(false);\n    } catch (error) {}\n  };\n\n  return (\n    <Elements>\n      <NameContacts>\n        <IconBox>{icon}</IconBox>\n        {name}: {number}\n      </NameContacts>\n      <ButtonBox>\n        <Button\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n          dispatch={loading}\n        >\n          {loading ? (\n            <TailSpin width={20} height={20} />\n          ) : (\n            <MdDelete size={20} />\n          )}\n        </Button>\n        <Button type=\"button\" onClick={() => setIsModal(true)}>\n          <BsPencilFill size={20} />\n        </Button>\n      </ButtonBox>\n\n      {isModal && (\n        <ModalCorrection\n          name={name}\n          number={number}\n          id={id}\n          close={setIsModal}\n        />\n      )}\n    </Elements>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Contact } from './Contact';\nimport { ContactListWrapper, Title, List } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from './../../redux/contacts/contacts-selector';\nimport { ErrorContactList } from 'components/ErrorContactList/ErrorContactList';\nimport { contactsOperations } from 'redux/contacts';\nimport { useSearchParams } from 'react-router-dom';\n\n// const contactsList = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\nexport const ContactList = () => {\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get('search') ?? '';\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.contactsListServer());\n  }, [dispatch]);\n\n  const renderContacts = filter\n    ? contacts.filter(x => x.name.toLowerCase().includes(filter.toLowerCase()))\n    : contacts;\n\n  return (\n    <ContactListWrapper>\n      <Title>Contact List</Title>\n\n      {contacts.length === 0 ? (\n        <ErrorContactList />\n      ) : (\n        <List>\n          {renderContacts.map(x => (\n            <Contact key={x.id} data={x} />\n          ))}\n        </List>\n      )}\n    </ContactListWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListWrapper = styled.div`\n  overflow: auto;\n  padding: 20px 30px;\n  width: 600px;\n  max-height: 320px;\n  border-radius: 5px;\n  background-color: var(--background-card-box);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  margin-top: 30px;\n`;\n\nexport const Elements = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n\n  &:not(:first-child) {\n    margin-top: 20px;\n  }\n`;\n\nexport const NameContacts = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  font-size: 1.2em;\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #fff;\n  border-radius: 5px;\n  color: #fff;\n`;\n\nexport const IconBox = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--contact-list);\n  font-size: 20px;\n`;\n","import React from 'react';\nimport { BiErrorAlt } from 'react-icons/bi';\nimport { ErrorBox } from './ErrorContactList.styled';\n\nexport const ErrorContactList = () => {\n  return (\n    <ErrorBox>\n      <BiErrorAlt color=\"red\" size={40} />\n      <p>There is No contact in your contacts list!</p>\n    </ErrorBox>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorBox = styled.div`\n  margin-top: 20px;\n  padding: 15px 10px;\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  background-color: rgba(255, 0, 0, 0.2);\n`;\n","import React, { useState } from 'react';\nimport { contactsOperations } from 'redux/contacts';\nimport { useDispatch } from 'react-redux';\nimport {\n  Form,\n  FormWrapper,\n  ButtonSubmit,\n  InputForm,\n  SpanText,\n  Label,\n} from './FormNewContacts.styled';\n\nexport const FormNewContacts = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      dispatch(contactsOperations.newContact({ name, number }));\n      setName('');\n      setNumber('');\n    } catch (error) {}\n  };\n\n  return (\n    <FormWrapper>\n      <Form autoComplete=\"on\" onSubmit={event => onSubmit(event)}>\n        <Label>\n          <SpanText>Name</SpanText>\n          <InputForm\n            onChange={event => setName(event.target.value)}\n            type={'text'}\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Vitalik\"\n            required\n          />\n        </Label>\n        <Label>\n          <SpanText>Number</SpanText>\n          <InputForm\n            onChange={event => setNumber(event.target.value)}\n            type={'tel'}\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"+38(099)999-99-99\"\n            required\n          />\n        </Label>\n        <ButtonSubmit type=\"submit\" value={'add contact'} />\n      </Form>\n    </FormWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Input } from './../SearchContacts/SearchContacts.styled';\n\nexport const FormWrapper = styled.div`\n  width: 500px;\n  padding: 20px 30px;\n  border-radius: 5px;\n  background-color: var(--background-card-box);\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SpanText = styled.span`\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n  margin-right: 10px;\n  line-height: 30px;\n  font-weight: 500;\n  color: #fff;\n`;\n\nexport const InputForm = styled(Input)`\n  display: inline-block;\n  padding: 10px 10px 10px 20px;\n  margin: 0;\n  margin-left: auto;\n  width: 300px;\n`;\n\nexport const ButtonSubmit = styled.input`\n  display: block;\n  /* max-width: 150px; */\n  margin: 0 auto;\n  margin-top: 40px;\n  padding: 5px 20px;\n\n  font-family: 'Orbitron', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  background: transparent;\n  border: 1px solid transparent;\n  box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 0%);\n  color: #fff;\n  outline: 2px solid;\n  outline-color: hsla(0, 0%, 100%, 0.5);\n  outline-offset: 0;\n  position: relative;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: uppercase;\n  transition: all 1.25s cubic-bezier(0.19, 1, 0.22, 1);\n  :hover {\n    border: 1px solid;\n    box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 50%),\n      0 0 20px hsl(0deg 0% 100% / 20%);\n    outline-color: hsla(0, 0%, 100%, 0);\n    outline-offset: 15px;\n  }\n`;\n","import {\n  FormWrapper,\n  Form,\n  Label,\n  SpanText,\n  InputForm,\n  ButtonSubmit,\n} from 'components/FormNewContacts/FormNewContacts.styled';\nimport React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useForm } from 'react-hook-form';\nimport { contactsOperations } from 'redux/contacts';\nimport { BoxModal, WrapperModal } from './ModalCorrection.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const ModalCorrection = ({ close, name, number, id }) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      name,\n      number,\n    },\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.addEventListener('keydown', clickEscate);\n\n    return () => {\n      window.removeEventListener('keydown', clickEscate);\n    };\n  }, []);\n\n  function clickEscate(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n    close(false);\n  }\n\n  function clickOverlay(e) {\n    if (e.target !== e.currentTarget) return;\n\n    close(false);\n  }\n\n  const onSubmit = async data => {\n    try {\n      await dispatch(contactsOperations.updateContact({ id, ...data }));\n      close(false);\n    } catch (error) {}\n  };\n\n  return createPortal(\n    <WrapperModal onClick={clickOverlay}>\n      <BoxModal>\n        <FormWrapper>\n          <Form autoComplete=\"on\" onSubmit={handleSubmit(onSubmit)}>\n            <Label>\n              <SpanText>Name</SpanText>\n              <InputForm\n                {...register('name')}\n                type={'text'}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Vitalik\"\n                required\n              />\n            </Label>\n            <Label>\n              <SpanText>Number</SpanText>\n              <InputForm\n                {...register('number')}\n                type={'tel'}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"+38(099)999-99-99\"\n                required\n              />\n            </Label>\n            <ButtonSubmit type=\"submit\" value={'add contact'} />\n          </Form>\n        </FormWrapper>\n      </BoxModal>\n    </WrapperModal>,\n    document.querySelector('#modal-root')\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperModal = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.8); ;\n`;\n\nexport const BoxModal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  /* width: 500px; */\n  padding: 20px 15px;\n\n  border-radius: 10px;\n  background-color: var(--background-section);\n`;\n","import React, { useState } from 'react';\nimport { Input } from './SearchContacts.styled';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchContacts = () => {\n  const [filter, setFilter] = useState('');\n  const [, setSearchParams] = useSearchParams();\n\n  const change = e => {\n    const value = e.target.value;\n    setFilter(value);\n\n    const nextParams = value !== '' ? { search: value } : {};\n    setSearchParams(nextParams);\n  };\n  return (\n    <div>\n      <label>\n        <Input\n          onChange={e => change(e)}\n          type=\"text\"\n          name=\"search\"\n          value={filter}\n          placeholder={'Find contacts by name'}\n        />\n      </label>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  position: relative;\n  padding: 0 10px 10px 10px;\n  display: block;\n  margin: 0 auto;\n  margin-top: 50px;\n  width: 400px;\n\n  border: none;\n  outline: none;\n  border-bottom: 2px solid #fff;\n\n  font-size: 20px;\n  text-align: center;\n\n  background-color: transparent;\n  color: #fff;\n`;\n","import React from 'react';\nimport { FormNewContacts } from 'components/FormNewContacts/FormNewContacts';\nimport { SearchContacts } from 'components/SearchContacts/SearchContacts';\nimport { ContactsWrapper, Title, CartWrapper } from './Contacts.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  return (\n    <ContactsWrapper>\n      <Title>Your phone book</Title>\n      <SearchContacts />\n      <CartWrapper>\n        <FormNewContacts />\n        <ContactList />\n      </CartWrapper>\n    </ContactsWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  padding: 50px 0;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const CartWrapper = styled.div`\n  margin-top: 50px;\n  padding-right: 50px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  align-items: flex-start;\n  gap: 50px;\n`;\n","export const getContacts = state => state.contacts.contacts;\nexport const getIsLoadingContacts = state => state.contacts.isLoadingContacts;\n"],"names":["Contact","data","id","name","number","useState","icon","setIcon","loading","setLoading","isModal","setIsModal","dispatch","useDispatch","useEffect","toUpperCase","onDeleteContact","contactId","contactsOperations","Elements","NameContacts","IconBox","ButtonBox","Button","type","onClick","width","height","size","ModalCorrection","close","ContactList","useSearchParams","filter","get","contacts","useSelector","getContacts","renderContacts","x","toLowerCase","includes","ContactListWrapper","Title","length","ErrorContactList","List","map","styled","ErrorBox","color","FormNewContacts","setName","setNumber","onSubmit","event","preventDefault","error","FormWrapper","Form","autoComplete","Label","SpanText","InputForm","onChange","target","value","pattern","title","placeholder","required","ButtonSubmit","Input","useForm","defaultValues","register","handleSubmit","clickEscate","e","code","window","addEventListener","removeEventListener","createPortal","WrapperModal","currentTarget","BoxModal","document","querySelector","SearchContacts","setFilter","setSearchParams","search","change","Contacts","ContactsWrapper","CartWrapper","state","getIsLoadingContacts","isLoadingContacts"],"sourceRoot":""}