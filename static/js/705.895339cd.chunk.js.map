{"version":3,"file":"static/js/705.895339cd.chunk.js","mappings":"+QAUaA,EAAiB,WAAO,IAAD,EAClC,GAAuBC,EAAAA,EAAAA,MACjBC,EAAM,WADZ,eAC4BC,IAAI,iBAApB,QAAiC,GACvCC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,aACvBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,UACpBC,GAAoBJ,EAAAA,EAAAA,IAAYK,EAAAA,sBAChCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,WACRJ,EAASK,EAAAA,mBAAAA,sBACLT,GACFM,EAAS,SAAU,CAAEI,SAAS,GAEjC,GAAE,CAACN,EAAUJ,EAAOM,IAMd,CACLK,eALqBhB,EACnBE,EAASF,QAAO,SAAAiB,GAAC,OAAIA,EAAEC,KAAKC,cAAcC,SAASpB,EAAOmB,cAAzC,IACjBjB,EAIFA,SAAAA,EACAK,kBAAAA,EAEH,C,qLCnCM,IAAMH,EAAc,SAAAiB,GAAK,OAAIA,EAAMnB,SAASA,QAAnB,EACnBM,EAAuB,SAAAa,GAAK,OAAIA,EAAMnB,SAASK,iBAAnB,EAC5BD,EAAW,SAAAe,GAAK,OAAIA,EAAMnB,SAASG,KAAnB,EAChBiB,EAAkB,SAAAD,GAAK,OAAIA,EAAMnB,SAASqB,YAAnB,C","sources":["hook/useContactList.js","redux/contacts/contacts-selector.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { contactsOperations } from 'redux/contacts';\nimport {\n  getContacts,\n  getError,\n  getIsLoadingContacts,\n} from 'redux/contacts/contacts-selector';\n\nexport const useContactList = () => {\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get('search') ?? '';\n  const contacts = useSelector(getContacts);\n  const error = useSelector(getError);\n  const isLoadingContacts = useSelector(getIsLoadingContacts);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(contactsOperations.contactsListServer());\n    if (error) {\n      navigate('/error', { replace: true });\n    }\n  }, [dispatch, error, navigate]);\n\n  const renderContacts = filter\n    ? contacts.filter(x => x.name.toLowerCase().includes(filter.toLowerCase()))\n    : contacts;\n\n  return {\n    renderContacts,\n    contacts,\n    isLoadingContacts,\n  };\n};\n","export const getContacts = state => state.contacts.contacts;\nexport const getIsLoadingContacts = state => state.contacts.isLoadingContacts;\nexport const getError = state => state.contacts.error;\nexport const getErrorMessage = state => state.contacts.errorMessage;\n"],"names":["useContactList","useSearchParams","filter","get","contacts","useSelector","getContacts","error","getError","isLoadingContacts","getIsLoadingContacts","dispatch","useDispatch","navigate","useNavigate","useEffect","contactsOperations","replace","renderContacts","x","name","toLowerCase","includes","state","getErrorMessage","errorMessage"],"sourceRoot":""}