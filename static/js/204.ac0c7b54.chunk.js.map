{"version":3,"file":"static/js/204.ac0c7b54.chunk.js","mappings":"kZAGaA,EAAcC,EAAAA,GAAAA,IAAH,wIAOXC,EAAOD,EAAAA,GAAAA,KAAH,mGAOJE,EAAQF,EAAAA,GAAAA,MAAH,qGAMLG,EAAWH,EAAAA,GAAAA,KAAH,2KAURI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,MAAPL,CAAH,wIAQTM,EAAeN,EAAAA,GAAAA,MAAH,s0B,iFCvCZK,E,QAAQL,GAAAA,MAAH,gU,qLCMH,SAASO,IACtB,OAA0CC,EAAAA,EAAAA,MAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAC1BC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,mCAAG,WAAMC,GAAN,IAAAC,EAAA,0FAEGJ,EAASK,EAAAA,eAAAA,SAAwBF,IAFpC,OAEPC,EAFO,OAGbE,QAAQC,IAAI,mBAAUH,GACtBL,IAJa,gDAMbO,QAAQE,MAAR,MANa,yDAAH,sDAUd,OACE,UAAC,EAAAC,cAAD,YACE,SAAC,EAAAC,KAAD,yCACA,kBAAMC,aAAa,KAAKT,SAAUJ,EAAaI,GAA/C,WACE,UAAC,EAAAZ,MAAD,YACE,SAAC,EAAAsB,SAAD,yBACA,SAAC,EAAApB,WAAD,gBACEqB,KAAK,QACDhB,EAAS,SAFf,IAGEiB,UAAQ,EACRC,YAAY,eAGhB,UAAC,EAAAzB,MAAD,YACE,SAAC,EAAAsB,SAAD,qBACA,SAAC,EAAApB,WAAD,gBACEqB,KAAK,SACDhB,EAAS,UAFf,IAGEiB,UAAQ,EACRC,YAAY,yBAGhB,UAAC,EAAAzB,MAAD,YACE,SAAC,EAAAsB,SAAD,wBACA,SAAC,EAAApB,WAAD,gBACEqB,KAAK,YACDhB,EAAS,aAFf,IAGEmB,UAAU,IACVC,UAAU,KACVH,UAAQ,SAIZ,SAAC,EAAApB,aAAD,CAAcmB,KAAK,SAASK,MAAO,kBAI1C,C,4LCxDYT,EAAgBrB,EAAAA,GAAAA,IAAH,sLAUbsB,EAAOtB,EAAAA,GAAAA,EAAH,iEAKJE,EAAQF,EAAAA,GAAAA,MAAH,kGAQLwB,EAAWxB,EAAAA,GAAAA,KAAH,+G,0GCzBd,IAAM+B,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAAf,EAErBC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,KAAKC,IAApB,C","sources":["components/FormNewContacts/FormNewContacts.styled.js","components/SearchContacts/SearchContacts.styled.js","page/SingUp/SingUp.jsx","page/SingUp/SingUp.styled.js","redux/user/auth-selector.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Input } from './../SearchContacts/SearchContacts.styled';\n\nexport const FormWrapper = styled.div`\n  width: 500px;\n  padding: 20px 30px;\n  border-radius: 5px;\n  background-color: var(--background-card-box);\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SpanText = styled.span`\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n  margin-right: 10px;\n  line-height: 30px;\n  font-weight: 500;\n  color: #fff;\n`;\n\nexport const InputForm = styled(Input)`\n  display: inline-block;\n  padding: 10px 10px 10px 20px;\n  margin: 0;\n  margin-left: auto;\n  width: 300px;\n`;\n\nexport const ButtonSubmit = styled.input`\n  display: block;\n  max-width: 150px;\n  margin: 0 auto;\n  margin-top: 40px;\n  padding: 5px 20px;\n\n  font-family: 'Orbitron', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  background: transparent;\n  border: 1px solid transparent;\n  box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 0%);\n  color: #fff;\n  outline: 2px solid;\n  outline-color: hsla(0, 0%, 100%, 0.5);\n  outline-offset: 0;\n  position: relative;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: uppercase;\n  transition: all 1.25s cubic-bezier(0.19, 1, 0.22, 1);\n  :hover {\n    border: 1px solid;\n    box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 50%),\n      0 0 20px hsl(0deg 0% 100% / 20%);\n    outline-color: hsla(0, 0%, 100%, 0);\n    outline-offset: 15px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  position: relative;\n  padding: 0 10px 10px 10px;\n  display: block;\n  margin: 0 auto;\n  margin-top: 50px;\n  width: 400px;\n\n  border: none;\n  outline: none;\n  border-bottom: 2px solid #fff;\n\n  font-size: 20px;\n  text-align: center;\n\n  background-color: transparent;\n  color: #fff;\n`;\n","import { ButtonSubmit } from 'components/FormNewContacts/FormNewContacts.styled';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { WrapperSingUp, Text, Label, FormText } from './SingUp.styled';\nimport { InputForm } from '../../components/FormNewContacts/FormNewContacts.styled';\nimport { AuthOperations } from 'redux/user';\nimport { useDispatch } from 'react-redux';\n\nexport default function SingIn() {\n  const { register, handleSubmit, reset } = useForm();\n  const dispatch = useDispatch();\n  const onSubmit = async data => {\n    try {\n      const a = await dispatch(AuthOperations.register(data));\n      console.log('ðŸš€ ~ a', a);\n      reset();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <WrapperSingUp>\n      <Text>Let's start registration?</Text>\n      <form autoComplete=\"on\" onSubmit={handleSubmit(onSubmit)}>\n        <Label>\n          <FormText>User name</FormText>\n          <InputForm\n            type=\"name\"\n            {...register('name')}\n            required\n            placeholder=\"IHdPA\"\n          />\n        </Label>\n        <Label>\n          <FormText>Email</FormText>\n          <InputForm\n            type=\"email\"\n            {...register('email')}\n            required\n            placeholder=\"ihdpa@gmail.com\"\n          />\n        </Label>\n        <Label>\n          <FormText>Password</FormText>\n          <InputForm\n            type=\"password\"\n            {...register('password')}\n            minLength=\"5\"\n            maxLength=\"12\"\n            required\n          />\n        </Label>\n\n        <ButtonSubmit type=\"submit\" value={'register'} />\n      </form>\n    </WrapperSingUp>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapperSingUp = styled.div`\n  width: 100%;\n  height: calc(100vh - 54px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n`;\n\nexport const Text = styled.p`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport const Label = styled.label`\n  display: block;\n\n  &:not(:first-child) {\n    margin-top: 30px;\n  }\n`;\n\nexport const FormText = styled.span`\n  display: inline-block;\n  width: 100px;\n  margin-right: 30px;\n  text-align: right;\n`;\n","export const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const getUsername = state => state.auth.user.name;\n"],"names":["FormWrapper","styled","Form","Label","SpanText","InputForm","Input","ButtonSubmit","SingIn","useForm","register","handleSubmit","reset","dispatch","useDispatch","onSubmit","data","a","AuthOperations","console","log","error","WrapperSingUp","Text","autoComplete","FormText","type","required","placeholder","minLength","maxLength","value","getIsLoggedIn","state","auth","isLoggedIn","getUsername","user","name"],"sourceRoot":""}