{"version":3,"file":"static/js/864.38311add.chunk.js","mappings":"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","sources":["components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.styled.js","components/FormNewContacts/FormNewContacts.jsx","components/FormNewContacts/FormNewContacts.styled.js","components/SearchContacts/SearchContacts.jsx","components/SearchContacts/SearchContacts.styled.js","page/Contacts/Contacts.jsx","page/Contacts/Contacts.styled.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MdDelete } from 'react-icons/md';\nimport { Elements, NameContacts, Button, IconBox } from './ContactList.styled';\n\nexport const Contact = ({ data: { name, number } }) => {\n  const [icon, setIcon] = useState(null);\n\n  useEffect(() => {\n    setIcon(name[0].toUpperCase());\n  }, [name]);\n\n  return (\n    <Elements>\n      <NameContacts>\n        <IconBox>{icon}</IconBox>\n        {name}: {number}\n      </NameContacts>\n      <Button type=\"button\">\n        <MdDelete size={20} />\n      </Button>\n    </Elements>\n  );\n};\n","import React, { useState } from 'react';\nimport { Contact } from './Contact';\nimport { ContactListWrapper, Title, List } from './ContactList.styled';\n\nconst contactsList = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport const ContactList = () => {\n  const [first] = useState(contactsList);\n  return (\n    <ContactListWrapper>\n      <Title>Contact List</Title>\n\n      <List>\n        {first.map(x => (\n          <Contact key={x.number} data={x} />\n        ))}\n      </List>\n    </ContactListWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListWrapper = styled.div`\n  padding: 20px 30px;\n  width: 500px;\n  border-radius: 5px;\n  background-color: var(--background-card-box);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  margin-top: 30px;\n`;\n\nexport const Elements = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:not(:first-child) {\n    margin-top: 20px;\n  }\n`;\n\nexport const NameContacts = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  font-size: 1.2em;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 15px;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #fff;\n  border-radius: 5px;\n  color: #fff;\n`;\n\nexport const IconBox = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--contact-list);\n  font-size: 20px;\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n  Form,\n  FormWrapper,\n  ButtonSubmit,\n  InputForm,\n  SpanText,\n  Label,\n} from './FormNewContacts.styled';\n\nexport const FormNewContacts = () => {\n  const { register, handleSubmit } = useForm();\n  const onSubmit = data => console.log(data);\n\n  return (\n    <FormWrapper>\n      <Form autoComplete=\"on\" onSubmit={handleSubmit(onSubmit)}>\n        <Label>\n          <SpanText>Name</SpanText>\n          <InputForm\n            type={'text'}\n            {...register('name')}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Vitalik\"\n            required\n          />\n        </Label>\n        <Label>\n          <SpanText>Number</SpanText>\n          <InputForm\n            type={'tel'}\n            {...register('phone')}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"+38(099)999-99-99\"\n            required\n          />\n        </Label>\n        <ButtonSubmit type=\"submit\" value={'add contact'} />\n      </Form>\n    </FormWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Input } from './../SearchContacts/SearchContacts.styled';\n\nexport const FormWrapper = styled.div`\n  width: 500px;\n  padding: 20px 30px;\n  border-radius: 5px;\n  background-color: var(--background-card-box);\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SpanText = styled.span`\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n  margin-right: 10px;\n  line-height: 30px;\n  font-weight: 500;\n  color: #fff;\n`;\n\nexport const InputForm = styled(Input)`\n  display: inline-block;\n  padding: 10px 10px 10px 20px;\n  margin: 0;\n  margin-left: auto;\n  width: 300px;\n`;\n\nexport const ButtonSubmit = styled.input`\n  display: block;\n  max-width: 150px;\n  margin: 0 auto;\n  margin-top: 40px;\n  padding: 5px 20px;\n\n  font-family: 'Orbitron', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  background: transparent;\n  border: 1px solid transparent;\n  box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 0%);\n  color: #fff;\n  outline: 2px solid;\n  outline-color: hsla(0, 0%, 100%, 0.5);\n  outline-offset: 0;\n  position: relative;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: uppercase;\n  transition: all 1.25s cubic-bezier(0.19, 1, 0.22, 1);\n  :hover {\n    border: 1px solid;\n    box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 50%),\n      0 0 20px hsl(0deg 0% 100% / 20%);\n    outline-color: hsla(0, 0%, 100%, 0);\n    outline-offset: 15px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Input } from './SearchContacts.styled';\n\nexport const SearchContacts = () => {\n  const [filter, setFilter] = useState('');\n  return (\n    <div>\n      <label>\n        <Input\n          onChange={e => setFilter(e.target.value)}\n          type=\"text\"\n          value={filter}\n          placeholder={'Find contacts by name'}\n        />\n      </label>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  position: relative;\n  padding: 0 10px 10px 10px;\n  display: block;\n  margin: 0 auto;\n  margin-top: 50px;\n  width: 400px;\n\n  border: none;\n  outline: none;\n  border-bottom: 2px solid #fff;\n\n  font-size: 20px;\n  text-align: center;\n\n  background-color: transparent;\n  color: #fff;\n`;\n","import { FormNewContacts } from 'components/FormNewContacts/FormNewContacts';\nimport { SearchContacts } from 'components/SearchContacts/SearchContacts';\nimport React from 'react';\nimport { ContactsWrapper, Title, CartWrapper } from './Contacts.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nexport default function Contacts() {\n  return (\n    <ContactsWrapper>\n      <Title>Your phone book</Title>\n      <SearchContacts />\n      <CartWrapper>\n        <FormNewContacts />\n        <ContactList />\n      </CartWrapper>\n    </ContactsWrapper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  padding: 50px 0;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const CartWrapper = styled.div`\n  margin-top: 50px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: center;\n  align-items: center;\n  gap: 50px;\n`;\n"],"names":["Contact","data","name","number","useState","icon","setIcon","useEffect","toUpperCase","Elements","NameContacts","IconBox","Button","type","size","contactsList","id","ContactList","first","ContactListWrapper","Title","List","map","x","styled","FormNewContacts","useForm","register","handleSubmit","FormWrapper","Form","autoComplete","onSubmit","console","log","Label","SpanText","InputForm","pattern","title","placeholder","required","ButtonSubmit","value","Input","SearchContacts","filter","setFilter","onChange","e","target","Contacts","ContactsWrapper","CartWrapper"],"sourceRoot":""}