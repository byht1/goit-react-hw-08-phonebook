{"version":3,"file":"static/js/751.2f7de37a.chunk.js","mappings":"qZAGaA,EAAcC,EAAAA,GAAAA,IAAH,mOAWXC,EAAOD,EAAAA,GAAAA,KAAH,mGAOJE,EAAQF,EAAAA,GAAAA,MAAH,qGAMLG,EAAWH,EAAAA,GAAAA,KAAH,2KAURI,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,MAAPL,CAAH,wIAQTM,EAAeN,EAAAA,GAAAA,MAAH,40B,4ICjCZO,EAAkB,SAAC,GAAsB,IAAjBC,EAAgB,oBACnD,GACEC,EAAAA,EAAAA,oBAAmBD,GADbE,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,SAAUC,EAA1C,EAA0CA,aAG1C,OAAOC,EAAAA,EAAAA,eACL,SAAC,EAAAC,aAAD,CAAcC,QAASN,EAAvB,UACE,SAAC,EAAAO,SAAD,WACE,SAAC,EAAAlB,YAAD,WACE,UAAC,EAAAE,KAAD,CAAMiB,aAAa,KAAKP,SAAUE,EAAaF,GAA/C,WACE,UAAC,EAAAT,MAAD,YACE,SAAC,EAAAC,SAAD,oBACA,SAAC,EAAAC,WAAD,kBACMQ,EAAS,SADf,IAEEO,KAAM,OACNC,KAAK,OACLC,QAAQ,yHACRC,MAAM,yIACNC,YAAY,UACZC,UAAQ,SAGZ,UAAC,EAAAtB,MAAD,YACE,SAAC,EAAAC,SAAD,sBACA,SAAC,EAAAC,WAAD,kBACMQ,EAAS,WADf,IAEEO,KAAM,MACNC,KAAK,SACLC,QAAQ,yFACRC,MAAM,+FACNC,YAAY,oBACZC,UAAQ,SAGZ,SAAC,EAAAlB,aAAD,CAAca,KAAK,SAASM,MAAO,yBAK3CC,SAASC,cAAc,eAE1B,C,kIClDYZ,EAAef,EAAAA,GAAAA,IAAH,0KAWZiB,EAAWjB,EAAAA,GAAAA,IAAH,sO,iFCXRK,E,QAAQL,GAAAA,MAAH,gU,mICGLS,EAAqB,SAAC,GAAiC,IAA/BmB,EAA8B,EAA9BA,MAAOR,EAAuB,EAAvBA,KAAMS,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GACxD,GAAmCC,EAAAA,EAAAA,IAAQ,CACzCC,cAAe,CACbZ,KAAAA,EACAS,OAAAA,KAHIjB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAMZoB,GAAWC,EAAAA,EAAAA,MAWjB,SAASC,EAAYC,GACJ,WAAXA,EAAEC,MAGNT,GAAM,EACP,EAdDU,EAAAA,EAAAA,YAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWL,GAE5B,WACLI,OAAOE,oBAAoB,UAAWN,EACvC,CAEF,GAAE,IAoBH,MAAO,CAAEzB,aAXT,SAAsB0B,GAChBA,EAAEM,SAAWN,EAAEO,eAEnBf,GAAM,EACP,EAOsBjB,SALN,SAAAiC,GACfX,EAASY,EAAAA,mBAAAA,eAAA,QAAmCf,GAAAA,GAAOc,KACnDhB,GAAM,EACP,EAEgChB,SAAAA,EAAUC,aAAAA,EAC5C,C,qLC1CM,IAAMiC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACnBC,EAAuB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,iBAAnB,EAC5BC,EAAW,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,KAAnB,EAChBC,EAAkB,SAAAN,GAAK,OAAIA,EAAMC,SAASM,YAAnB,C","sources":["components/FormNewContacts/FormNewContacts.styled.js","components/ModalCorrection/ModalCorrection.jsx","components/ModalCorrection/ModalCorrection.styled.js","components/SearchContacts/SearchContacts.styled.js","hook/useModalCorrection.js","redux/contacts/contacts-selector.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Input } from './../SearchContacts/SearchContacts.styled';\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  max-width: 600px;\n  padding: 20px 30px;\n  border-radius: 5px;\n  background-color: var(--background-card-box);\n  @media screen and (min-width: 1200px) {\n    max-width: 500px;\n  }\n`;\n\nexport const Form = styled.form`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SpanText = styled.span`\n  display: inline-block;\n  width: 100px;\n  text-align: right;\n  margin-right: 10px;\n  line-height: 30px;\n  font-weight: 500;\n  color: #fff;\n`;\n\nexport const InputForm = styled(Input)`\n  display: inline-block;\n  padding: 10px 10px 10px 20px;\n  margin: 0;\n  margin-left: auto;\n  width: 300px;\n`;\n\nexport const ButtonSubmit = styled.input`\n  display: block;\n  /* max-width: 150px; */\n  margin: 0 auto;\n  margin-top: 40px;\n  padding: 5px 20px;\n\n  font-family: 'Orbitron', sans-serif;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  background: transparent;\n  border: 1px solid transparent;\n  box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 0%);\n  color: #fff;\n  outline: 2px solid;\n  outline-color: hsla(0, 0%, 100%, 0.5);\n  outline-offset: 0;\n  position: relative;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: uppercase;\n  transition: all 1.25s cubic-bezier(0.19, 1, 0.22, 1);\n  :hover {\n    border: 1px solid;\n    box-shadow: inset 0 0 20px hsl(0deg 0% 100% / 50%),\n      0 0 20px hsl(0deg 0% 100% / 20%);\n    outline-color: hsla(0, 0%, 100%, 0);\n    outline-offset: 15px;\n  }\n`;\n","import {\n  FormWrapper,\n  Form,\n  Label,\n  SpanText,\n  InputForm,\n  ButtonSubmit,\n} from 'components/FormNewContacts/FormNewContacts.styled';\nimport { createPortal } from 'react-dom';\nimport { BoxModal, WrapperModal } from './ModalCorrection.styled';\nimport { useModalCorrection } from './../../hook/useModalCorrection';\n\nexport const ModalCorrection = ({ ...dataProps }) => {\n  const { clickOverlay, onSubmit, register, handleSubmit } =\n    useModalCorrection(dataProps);\n\n  return createPortal(\n    <WrapperModal onClick={clickOverlay}>\n      <BoxModal>\n        <FormWrapper>\n          <Form autoComplete=\"on\" onSubmit={handleSubmit(onSubmit)}>\n            <Label>\n              <SpanText>Name</SpanText>\n              <InputForm\n                {...register('name')}\n                type={'text'}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                placeholder=\"Vitalik\"\n                required\n              />\n            </Label>\n            <Label>\n              <SpanText>Number</SpanText>\n              <InputForm\n                {...register('number')}\n                type={'tel'}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                placeholder=\"+38(099)999-99-99\"\n                required\n              />\n            </Label>\n            <ButtonSubmit type=\"submit\" value={'add contact'} />\n          </Form>\n        </FormWrapper>\n      </BoxModal>\n    </WrapperModal>,\n    document.querySelector('#modal-root')\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperModal = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.8); ;\n`;\n\nexport const BoxModal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  /* width: 500px; */\n  padding: 20px 15px;\n\n  border-radius: 10px;\n  background-color: var(--background-section);\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  position: relative;\n  padding: 0 10px 10px 10px;\n  display: block;\n  margin: 0 auto;\n  margin-top: 50px;\n  width: 400px;\n\n  border: none;\n  outline: none;\n  border-bottom: 2px solid #fff;\n\n  font-size: 20px;\n  text-align: center;\n\n  background-color: transparent;\n  color: #fff;\n`;\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\nexport const useModalCorrection = ({ close, name, number, id }) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      name,\n      number,\n    },\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.addEventListener('keydown', clickEscate);\n\n    return () => {\n      window.removeEventListener('keydown', clickEscate);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function clickEscate(e) {\n    if (e.code !== 'Escape') {\n      return;\n    }\n    close(false);\n  }\n\n  function clickOverlay(e) {\n    if (e.target !== e.currentTarget) return;\n\n    close(false);\n  }\n\n  const onSubmit = data => {\n    dispatch(contactsOperations.updateContact({ id, ...data }));\n    close(false);\n  };\n\n  return { clickOverlay, onSubmit, register, handleSubmit };\n};\n","export const getContacts = state => state.contacts.contacts;\nexport const getIsLoadingContacts = state => state.contacts.isLoadingContacts;\nexport const getError = state => state.contacts.error;\nexport const getErrorMessage = state => state.contacts.errorMessage;\n"],"names":["FormWrapper","styled","Form","Label","SpanText","InputForm","Input","ButtonSubmit","ModalCorrection","dataProps","useModalCorrection","clickOverlay","onSubmit","register","handleSubmit","createPortal","WrapperModal","onClick","BoxModal","autoComplete","type","name","pattern","title","placeholder","required","value","document","querySelector","close","number","id","useForm","defaultValues","dispatch","useDispatch","clickEscate","e","code","useEffect","window","addEventListener","removeEventListener","target","currentTarget","data","contactsOperations","getContacts","state","contacts","getIsLoadingContacts","isLoadingContacts","getError","error","getErrorMessage","errorMessage"],"sourceRoot":""}